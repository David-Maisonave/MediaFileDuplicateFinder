name: Build releases


on: [push]
    
jobs:
  build:

    strategy:
      matrix:
        kind: ['windows', 'macOS', 'linux']
        include:
          - kind: windows
            os: windows-latest
            target: win-x64
            name: win-x64
          - kind: macOS
            os: windows-latest
            target: osx-x64
            name: osx-x64
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
            name: linux-x64
            
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - name: Set the value
      id: step_one
      run: |
        echo "action_state=yellow" >> $GITHUB_ENV
    - name: Use the value
      id: step_two
      run: |
        echo "${{ env.action_state }}" # This will output 'yellow'  
    - name: Declare some variables
      id: vars
      shell: bash
      run: echo "name=sha_short::$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Set current date as env variable
      run: echo "builddate=$(date +'%Y.%m%d')" >> $GITHUB_ENV
    - name: Check current date env variable
      run: echo "version = ${{ env.builddate }}"
    - name: Set folder
      run: echo "build_folder=bin/Release/net7.0/${{ matrix.target }}" >> $GITHUB_ENV
    - name: Build
      shell: bash
      run: |
            build_version="0.030.${{ env.builddate }}"
            # Add nuget sources
            dotnet nuget add source https://www.myget.org/F/sixlabors/api/v3/index.json
            # Build everything
            dotnet publish -c Release -v q --self-contained -r "${{ matrix.target }}" --property:identifier=${{ env.builddate }} --property:version=${build_version}
            
    - name: Compress Package
      shell: bash
      run: |
            release_name="MediaFileDuplicateFinder_${{ matrix.target }}_${{ env.builddate }}"
            # Pack files
            if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${{ env.build_folder }}/*"
            else
            tar czvf "${release_name}.tar.gz" "${{ env.build_folder }}"
            fi
            
    - name: Delete Build Folder
      shell: bash
      run: |
            # Delete output directory
            rm -r "${{ env.build_folder }}"
            
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
          tag_name: 1.031
          files: MediaFileDuplicateFinder*
          body: |
            Note: These are daily builds. Attachments are automatically created and replaced on every new commit. Regardless of what the message above says. If you experience upgrade issues you may need to delete your 'ScannedFiles.db' file in VDF folder.
            Last build based on ${{ steps.vars.outputs.sha_short }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


