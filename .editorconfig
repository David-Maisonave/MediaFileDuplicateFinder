root = true

[*]
charset = utf-8
#end_of_line =
indent_size = 4
indent_style = tab
tab_width = 4

[*.json]

[app.config]

[*.yml]
indent_size = 2
indent_style = space

[*.{proj,csproj,vbproj,props,targets,resx,vsixmanifest}]
indent_size = 2
indent_style = space

[app.manifest]
indent_size = 2
indent_style = space

[*.xml]

[*.xaml]
indent_style = space

[*.{cs,vb}]
insert_final_newline = true

dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:none
dotnet_style_predefined_type_for_member_access = true:none
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_require_accessibility_modifiers = never:info
dotnet_style_operator_placement_when_wrapping = beginning_of_line
end_of_line = crlf
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return = true:warning

[*.cs]
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = flush_left
csharp_indent_switch_labels = false
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = none
csharp_new_line_between_query_expression_clauses = true
csharp_prefer_braces = false:silent
csharp_prefer_simple_default_expression = true:suggestion
#csharp_preferred_modifier_order =
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses =
csharp_space_between_square_brackets = false
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_deconstructed_variable_declaration = false:none
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = false:none
csharp_style_var_when_type_is_apparent = true:suggestion
file_header_template = /*\n    Copyright (C) 2021 0x90d\n    This file is part of VideoDuplicateFinder\n    VideoDuplicateFinder is free software: you can redistribute it and/or modify\n    it under the terms of the GPLv3 as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    VideoDuplicateFinder is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n    You should have received a copy of the GNU General Public License\n    along with VideoDuplicateFinder.  If not, see <http://www.gnu.org/licenses/>.\n*/\n

[*.vb]
#visual_basic_preferred_modifier_order =

[*.cs]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.class_should_be_pascalcase.severity = warning
dotnet_naming_rule.class_should_be_pascalcase.symbols = class
dotnet_naming_rule.class_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.interface_should_be_istartuppercase_i_.severity = suggestion
dotnet_naming_rule.interface_should_be_istartuppercase_i_.symbols = interface
dotnet_naming_rule.interface_should_be_istartuppercase_i_.style = istartuppercase_i_

dotnet_naming_rule.struct_should_be_pascalcase.severity = warning
dotnet_naming_rule.struct_should_be_pascalcase.symbols = struct
dotnet_naming_rule.struct_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.enum_should_be__eall_upper_starts_with_e.severity = suggestion
dotnet_naming_rule.enum_should_be__eall_upper_starts_with_e.symbols = enum
dotnet_naming_rule.enum_should_be__eall_upper_starts_with_e.style = _eall_upper_starts_with_e

dotnet_naming_rule.delegate_should_be_typedelegateendswith_delegate.severity = suggestion
dotnet_naming_rule.delegate_should_be_typedelegateendswith_delegate.symbols = delegate
dotnet_naming_rule.delegate_should_be_typedelegateendswith_delegate.style = typedelegateendswith_delegate

dotnet_naming_rule.method_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.method_should_be_pascalcase.symbols = method
dotnet_naming_rule.method_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.property_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.property_should_be_pascalcase.symbols = property
dotnet_naming_rule.property_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.public_or_protected_field_should_be__lowercamelcasestartwith_.severity = suggestion
dotnet_naming_rule.public_or_protected_field_should_be__lowercamelcasestartwith_.symbols = public_or_protected_field
dotnet_naming_rule.public_or_protected_field_should_be__lowercamelcasestartwith_.style = _lowercamelcasestartwith_

dotnet_naming_rule.private_or_internal_field_should_be__lowercamelcasestartwith_.severity = suggestion
dotnet_naming_rule.private_or_internal_field_should_be__lowercamelcasestartwith_.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be__lowercamelcasestartwith_.style = _lowercamelcasestartwith_

dotnet_naming_rule.static_field_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.static_field_should_be_pascalcase.symbols = static_field
dotnet_naming_rule.static_field_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.private_or_internal_static_field_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.private_or_internal_static_field_should_be_pascalcase.symbols = private_or_internal_static_field
dotnet_naming_rule.private_or_internal_static_field_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.types_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.types_should_be_pascalcase.symbols = types
dotnet_naming_rule.types_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.non_field_members_should_be_lowercamelcase.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_lowercamelcase.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_lowercamelcase.style = lowercamelcase

# Symbol specifications

dotnet_naming_symbols.class.applicable_kinds = class
dotnet_naming_symbols.class.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.class.required_modifiers = 

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.struct.applicable_kinds = struct
dotnet_naming_symbols.struct.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.struct.required_modifiers = 

dotnet_naming_symbols.enum.applicable_kinds = enum
dotnet_naming_symbols.enum.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enum.required_modifiers = 

dotnet_naming_symbols.delegate.applicable_kinds = delegate
dotnet_naming_symbols.delegate.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.delegate.required_modifiers = 

dotnet_naming_symbols.method.applicable_kinds = method
dotnet_naming_symbols.method.applicable_accessibilities = public
dotnet_naming_symbols.method.required_modifiers = 

dotnet_naming_symbols.property.applicable_kinds = property
dotnet_naming_symbols.property.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.property.required_modifiers = 

dotnet_naming_symbols.public_or_protected_field.applicable_kinds = field
dotnet_naming_symbols.public_or_protected_field.applicable_accessibilities = public, protected
dotnet_naming_symbols.public_or_protected_field.required_modifiers = 

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers = 

dotnet_naming_symbols.static_field.applicable_kinds = field
dotnet_naming_symbols.static_field.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.static_field.required_modifiers = static

dotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_static_field.required_modifiers = static

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style.istartuppercase_i_.required_prefix = I
dotnet_naming_style.istartuppercase_i_.required_suffix = 
dotnet_naming_style.istartuppercase_i_.word_separator = 
dotnet_naming_style.istartuppercase_i_.capitalization = pascal_case

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style._eall_upper_starts_with_e.required_prefix = _e
dotnet_naming_style._eall_upper_starts_with_e.required_suffix = 
dotnet_naming_style._eall_upper_starts_with_e.word_separator = 
dotnet_naming_style._eall_upper_starts_with_e.capitalization = all_upper

dotnet_naming_style.typedelegateendswith_delegate.required_prefix = 
dotnet_naming_style.typedelegateendswith_delegate.required_suffix = _Delegate
dotnet_naming_style.typedelegateendswith_delegate.word_separator = 
dotnet_naming_style.typedelegateendswith_delegate.capitalization = pascal_case

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style._lowercamelcasestartwith_.required_prefix = _
dotnet_naming_style._lowercamelcasestartwith_.required_suffix = 
dotnet_naming_style._lowercamelcasestartwith_.word_separator = 
dotnet_naming_style._lowercamelcasestartwith_.capitalization = camel_case

dotnet_naming_style._lowercamelcasestartwith_.required_prefix = _
dotnet_naming_style._lowercamelcasestartwith_.required_suffix = 
dotnet_naming_style._lowercamelcasestartwith_.word_separator = 
dotnet_naming_style._lowercamelcasestartwith_.capitalization = camel_case

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style.lowercamelcase.required_prefix = 
dotnet_naming_style.lowercamelcase.required_suffix = 
dotnet_naming_style.lowercamelcase.word_separator = 
dotnet_naming_style.lowercamelcase.capitalization = camel_case
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:warning
csharp_style_namespace_declarations = block_scoped:warning
csharp_style_prefer_method_group_conversion = true:suggestion
csharp_style_prefer_top_level_statements = true:suggestion
csharp_style_expression_bodied_lambdas = when_on_single_line:warning
csharp_style_expression_bodied_local_functions = when_on_single_line:warning

[*.vb]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
